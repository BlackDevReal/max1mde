name: Update README with Latest Users

on:
  issues:
    types: [opened]

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get issue data
      if: ${{ startsWith(github.event.issue.title, 'Submit yourself') }}
      run: |
        echo "USER_NAME=${{ github.actor }}" >> $GITHUB_ENV
        echo "USER_AVATAR=https://avatars.githubusercontent.com/${{ github.actor }}" >> $GITHUB_ENV
        echo "USER_DATE=$(date +"%Y-%m-%d")" >> $GITHUB_ENV

    - name: Check for duplicates in README
      id: check_duplicates
      run: |
        if grep -q "\[${{ env.USER_NAME }}\](https://github.com/${{ env.USER_NAME }})" README.md; then
          echo "duplicate=true" >> $GITHUB_ENV
        else
          echo "duplicate=false" >> $GITHUB_ENV
        fi

    - name: Update README with latest user
      if: ${{ env.duplicate == 'false' }}
      run: |
        new_user_row="| [${{ env.USER_NAME }}](https://github.com/${{ env.USER_NAME }}) | <img src=\"${{ env.USER_AVATAR }}\" width=\"30\" height=\"30\" /> | ${{ env.USER_DATE }} |"

        # Update the README to add the new user in the latest section and manage the older users section
        awk -v new_user_row="$new_user_row" '
          BEGIN { inside_users_section = 0; inside_old_users_section = 0; user_count = 0; moved_old_user = 0; header_added = 0; old_user_header_added = 0; }

          # Find the start and end of the latest users section
          /<!--START_SECTION:users-->/ {
            print $0
            inside_users_section = 1
            user_count = 0
            # Check if the headers are already present, if not, add them
            if (!header_added) {
              print "| Name | Profile Picture | Date |"
              print "| ---- | ---------------- | ---- |"
              header_added = 1
            }
            print new_user_row
            next
          }

          /<!--END_SECTION:users-->/ {
            inside_users_section = 0
            # If more than 3 users, move the 4th user to old users section
            if (user_count >= 3 && !moved_old_user) {
              inside_old_users_section = 1
              print "<details><summary>Older users</summary>"
              print "<!--START_SECTION:old_users-->"
              # Check if the headers are already present in the old users section, if not, add them
              if (!old_user_header_added) {
                print "| Name | Profile Picture | Date |"
                print "| ---- | ---------------- | ---- |"
                old_user_header_added = 1
              }
              print old_user_row
              moved_old_user = 1
            }
            print $0
            next
          }

          # Track and count users within the latest users section
          inside_users_section && user_count < 3 {
            user_count++
            print $0
            next
          }

          # Store the oldest user (4th) to be moved to old users
          inside_users_section && user_count == 3 {
            old_user_row = $0
            user_count++
            next
          }

          # Handle the start of older users section
          /<!--START_SECTION:old_users-->/ {
            print $0
            if (!old_user_header_added) {
              print "| Name | Profile Picture | Date |"
              print "| ---- | ---------------- | ---- |"
              old_user_header_added = 1
            }
            inside_old_users_section = 1
            next
          }

          # End of older users section
          /<!--END_SECTION:old_users-->/ {
            inside_old_users_section = 0
            print $0
            next
          }

          # Print lines as is if outside the specified sections
          { print $0 }
        ' README.md > README.temp.md && mv README.temp.md README.md

    - name: Commit and push changes
      if: ${{ env.duplicate == 'false' }}
      run: |
        git config --local user.name "github-actions"
        git config --local user.email "github-actions@github.com"
        git add README.md
        git commit -m "Update README with new user"
        git push

    - name: Close issue
      run: |
        ISSUE_NUMBER=${{ github.event.issue.number }}
        curl -X PATCH -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER \
          -d '{"state":"closed"}'
